{
    "QEP": {
        "QQEM": "0.44",
        "connections": [
            {
                "fromId": 2,
                "toId": 1
            },
            {
                "fromId": 0,
                "toId": 2
            }
        ],
        "exportDirectory": "../../../SHADERS/LiquidFixed",
        "exportFlags": 7,
        "exportName": "MaskedGradientSwirl",
        "nodes": [
            {
                "fragmentCode": [
                    "void main() {",
                    "    fragColor = texture(iSource, texCoord);",
                    "    @nodes",
                    "    fragColor = fragColor * qt_Opacity;",
                    "}"
                ],
                "name": "Main",
                "nodeId": 0,
                "type": 0,
                "vertexCode": [
                    "void main() {",
                    "    texCoord = qt_MultiTexCoord0;",
                    "    fragCoord = qt_Vertex.xy;",
                    "    vec2 vertCoord = qt_Vertex.xy;",
                    "    @nodes",
                    "    gl_Position = qt_Matrix * vec4(vertCoord, 0.0, 1.0);",
                    "}"
                ],
                "x": 101.44999694824219,
                "y": 45.79999923706055
            },
            {
                "name": "Output",
                "nodeId": 1,
                "type": 1,
                "x": 101.44999694824219,
                "y": 790.2000122070312
            },
            {
                "description": "This is an empty node for creating custom effects.",
                "fragmentCode": [
                    "precision highp float;",
                    "",
                    "mat2 Rot(float a) {",
                    "    float s = sin(a);",
                    "    float c = cos(a);",
                    "    return mat2(c, -s, s, c);",
                    "}",
                    "",
                    "// Created by inigo quilez - iq/2014",
                    "// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.",
                    "vec2 hash( vec2 p )",
                    "{",
                    "    p = vec2( dot(p,vec2(2127.1,81.17)), dot(p,vec2(1269.5,283.37)) );",
                    "\treturn fract(sin(p)*43758.5453);",
                    "}",
                    "",
                    "float noise( in vec2 p )",
                    "{",
                    "    vec2 i = floor( p );",
                    "    vec2 f = fract( p );",
                    "\t",
                    "\tvec2 u = f*f*(3.0-2.0*f);",
                    "",
                    "    float n = mix( mix( dot( -1.0+2.0*hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), ",
                    "                        dot( -1.0+2.0*hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),",
                    "                   mix( dot( -1.0+2.0*hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), ",
                    "                        dot( -1.0+2.0*hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);",
                    "\treturn 0.5 + 0.5*n;",
                    "}",
                    "",
                    "@main",
                    "{",
                    "    vec2 uv = fragCoord/iResolution.xy;",
                    "    float ratio = iResolution.x / iResolution.y;",
                    "",
                    "    vec2 tuv = uv;",
                    "    tuv -= .5;",
                    "",
                    "    // rotate with Noise",
                    "    float degree = noise(vec2(iTime*.1, tuv.x*tuv.y));",
                    "",
                    "    tuv.y *= 1./ratio;",
                    "    tuv *= Rot(radians((degree-.5)*720.+180.));",
                    "\ttuv.y *= ratio;",
                    "",
                    "    ",
                    "    // Wave warp with sin",
                    "    float frequency = 5.;",
                    "    float amplitude = 30.;",
                    "    float speed = iTime * 2.;",
                    "    tuv.x += sin(tuv.y*frequency+speed)/amplitude;",
                    "   \ttuv.y += sin(tuv.x*frequency*1.5+speed)/(amplitude*.5);",
                    "    ",
                    "    ",
                    "    // draw the image",
                    "    vec3 layer1 = mix(color1, color2, smoothstep(-.3, .2, (tuv*Rot(radians(-5.))).x));",
                    "    vec3 layer2 = mix(color3, color4, smoothstep(-.3, .2, (tuv*Rot(radians(-5.))).x));",
                    "    ",
                    "    vec3 finalComp = mix(layer1, layer2, smoothstep(.5, -.3, tuv.y));",
                    "    ",
                    "    vec3 col = finalComp;",
                    "    ",
                    "    // get mask",
                    "    vec4 sourceColor = texture(iSource, uv);",
                    "    float mask = sourceColor.a;",
                    "    ",
                    "    fragColor = vec4(col * mask, mask);",
                    "}"
                ],
                "name": "Custom",
                "nodeId": 2,
                "properties": [
                    {
                        "defaultValue": "0, 0, 0",
                        "maxValue": "1, 1, 1",
                        "minValue": "0, 0, 0",
                        "name": "color1",
                        "type": "vec3",
                        "value": "0.141935, 0.773, 1"
                    },
                    {
                        "defaultValue": "0, 0, 0",
                        "maxValue": "1, 1, 1",
                        "minValue": "0, 0, 0",
                        "name": "color2",
                        "type": "vec3",
                        "value": "0.753, 0.231627, 0.867"
                    },
                    {
                        "defaultValue": "0, 0, 0",
                        "maxValue": "1, 1, 1",
                        "minValue": "0, 0, 0",
                        "name": "color3",
                        "type": "vec3",
                        "value": "0.22, 0.115485, 0.69"
                    },
                    {
                        "defaultValue": "0, 0, 0",
                        "maxValue": "1, 1, 1",
                        "minValue": "0, 0, 0",
                        "name": "color4",
                        "type": "vec3",
                        "value": "0.882, 0.733, 0.212447"
                    }
                ],
                "type": 2,
                "x": 66.44999694824219,
                "y": 492.1049499511719
            }
        ],
        "version": 1
    }
}
